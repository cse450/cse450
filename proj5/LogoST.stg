group LogoST;

Output(instructions,maxStackDepth,maxLocals)::=<<
; public class LogoJVM1 extends Object { ...}
.class public LogoJVM1
.super java/lang/Object

; public LogoJVM1() { super(); } // calls java.lang.Object()
.method public ()V
   aload_0
   invokenonvirtual java/lang/Object/()V
   return
.end method

; main(): Expr.g will generate bytecode in this method
.method public static main([Ljava/lang/String;)V
   .limit stack <maxStackDepth> ; how much stack space do we need?
   .limit locals <maxLocals> ; how many locals do we need?
   getstatic java/lang/System/out Ljava/io/PrintStream;
   ; code translated from input stream
   <instructions; separator="\n">
   ; print result on top of stack
   return
.end method
>>

assign(expression, varNum) ::= <<
<expression; separator="\n">
istore <varNum>
>>

var(varNum) ::= <<
iload <varNum>
>>

add(a, b) ::= <<
<a>
<b>
iadd
>>

sub(a, b) ::= <<
<a>
<b>
isub
>>

mul(a, b) ::= <<
<a>
<b>
imul
>>

div(a, b) ::= <<
<a>
<b>
idiv
>>

int(i) ::= <<
ldc <i>
>>
